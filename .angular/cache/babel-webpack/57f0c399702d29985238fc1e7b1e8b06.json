{"ast":null,"code":"import _classCallCheck from \"/Users/jekabolt/go/src/github.com/jekabolt/grbpwr-admin-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jekabolt/go/src/github.com/jekabolt/grbpwr-admin-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/authentication.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.password.errors.required);\n  }\n}\n\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\n\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport var LoginComponent = /*#__PURE__*/(function () {\n  var LoginComponent = /*#__PURE__*/function () {\n    function LoginComponent(formBuilder, route, router, authenticationService) {\n      _classCallCheck(this, LoginComponent);\n\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.authenticationService = authenticationService;\n      this.loading = false;\n      this.submitted = false;\n      this.error = ''; // redirect to home if already logged in\n\n      if (this.authenticationService.currentSessionValue.accessToken && this.authenticationService.currentSessionValue.refreshToken) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    _createClass(LoginComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n          password: ['', Validators.required]\n        }); // get return url from route parameters or default to '/'\n\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      } // convenience getter for easy access to form fields\n\n    }, {\n      key: \"f\",\n      get: function get() {\n        return this.loginForm.controls;\n      }\n    }, {\n      key: \"onSubmit\",\n      value: function onSubmit() {\n        var _this = this;\n\n        this.submitted = true; // stop here if form is invalid\n\n        if (this.loginForm.invalid) {\n          return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.password.value).pipe(first()).subscribe(function (data) {\n          _this.router.navigate([_this.returnUrl]);\n        }, function (error) {\n          _this.error = error.error.error;\n          _this.loading = false;\n        });\n      }\n    }]);\n\n    return LoginComponent;\n  }();\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 15,\n    vars: 8,\n    consts: [[1, \"\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h4\", 2);\n        i0.ɵɵtext(3, \"login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 1, 0, \"span\", 10);\n        i0.ɵɵtext(13, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i4.NgIf],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}