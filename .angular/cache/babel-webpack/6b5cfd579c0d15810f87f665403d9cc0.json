{"ast":null,"code":"import _classCallCheck from \"/Users/jekabolt/go/src/github.com/jekabolt/grbpwr-admin-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jekabolt/go/src/github.com/jekabolt/grbpwr-admin-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport var ApiService = /*#__PURE__*/(function () {\n  var ApiService = /*#__PURE__*/function () {\n    function ApiService(http) {\n      _classCallCheck(this, ApiService);\n\n      this.http = http;\n      this.baseURL = environment.API_SERVER_URL ? environment.API_SERVER_URL : \"http://localhost:8081/\";\n    }\n\n    _createClass(ApiService, [{\n      key: \"getProduct\",\n      value: function getProduct() {\n        console.log('getProduct ' + this.baseURL + 'product');\n        return this.http.get(this.baseURL + 'product');\n      }\n    }, {\n      key: \"modifyProductsById\",\n      value: function modifyProductsById(id, size) {\n        return this.http.put(this.baseURL + '/product' + id, size);\n      }\n    }, {\n      key: \"deleteProductById\",\n      value: function deleteProductById(id) {\n        return this.http.delete(this.baseURL + '/product/' + id, httpOptions);\n      }\n    }, {\n      key: \"AddProduct\",\n      value: function AddProduct(product) {\n        var headers = {\n          'content-type': 'application/json'\n        };\n        var body = JSON.stringify(product);\n        console.log(body);\n        return this.http.post(this.baseURL + 'product', body, {\n          'headers': headers\n        });\n      }\n    }]);\n\n    return ApiService;\n  }();\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}